<?php

/**
 * @file
 * The main module file.
 */

/**
 * Implements hook_menu().
 */
function islandora_get_csv_menu() {
  $items['admin/islandora/tools/islandora_get_csv'] = array(
    'title' => 'Islandora Get Metadata CSV',
    'description' => 'Configure the Islandora Get Metadata CSV module.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('islandora_get_csv_admin_settings'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

/**
 * Admin form definition.
 */
function islandora_get_csv_admin_settings() {
  $form = array();
  $form['islandora_get_csv_field_suffix_list'] = array(
    '#type' => 'textfield',
    '#title' => t('Solr field types to include'),
    '#default_value' => variable_get('islandora_get_csv_field_suffix_list', '_s,_ms'),
    '#description' => t("A comma-separated list of Solr field type suffixes, including the leading _, to include."),
  );
  $form['islandora_get_csv_additional_fields'] = array(
    '#type' => 'textfield',
    '#title' => t('Solr field types to include'),
    '#default_value' => variable_get('islandora_get_csv_additional_fields', 'PID,'),
    '#description' => t("A comma-separated list of Solr fields to include in the CSV. These are included in addition to the fields ending in the field types above."),
  );
  $form['islandora_get_csv_omit_fields'] = array(
    '#type' => 'textfield',
    '#title' => t('Solr field types to not include'),
    '#default_value' => variable_get('islandora_get_csv_omit_fields', 'mods_subject_descendants_all_ms'),
    '#description' => t("A comma-separated list of Solr fields to not include in the CSV."),
  );

  return system_settings_form($form);
}

/**
 * Implements hook_islandora_basic_collection_build_manage_object().
 */
function islandora_get_csv_islandora_basic_collection_build_manage_object(array $form_state, AbstractObject $object) {
  $form_state['manage_collection_object']['get_csv'] = array(
    '#id' => 'generate-csv',
    '#group' => 'manage_object',
    '#access' => user_access('manage collection policy'),
    '#type' => 'fieldset',
    '#title' => t('Generate CSV file of metadata used in this collection'),
    'form' => drupal_get_form('islandora_get_csv_generate_list', $object),
  );
  return $form_state;
}

/**
 * Form definition.
 */
function islandora_get_csv_generate_list() {
  $form = array();
  $form['islandora_get_csv_generate_list_description'] = array(
    '#markup' => t('The list will contain a CSV file containing one record per object.'),
    '#prefix' => '<div>',
    '#suffix' => '</div>',
  );
  $form['islandora_get_csv_generate_list_submit'] = array(
    '#type' => 'submit',
    '#value' => t('Generate metadata CSV'),
    '#submit' => array('islandora_get_csv_generate_list_submit_callback'),
  );
  return $form;
}

/**
 * Form submit callback.
 */
function islandora_get_csv_generate_list_submit_callback($form, $form_state) {
  $collection_pid = arg(2);
  if ($link = islandora_get_csv_write_csv($collection_pid)) {
    drupal_set_message(t("Download your CSV at !link.",
      array('!link' => $link)));
  }
}

/**
 * Generates the list and writes it to the public files directory.
 *
 * @param string $pid
 *   The collection's PID.
 *
 * @return string
 *   The rendered link to the output file.
 */
function islandora_get_csv_write_csv($pid) {
  $pid_for_filename = preg_replace('/:/', '_', $pid);
  $output_dir = variable_get('file_public_path', conf_path() . '/files');
  $output_file_path = $output_dir . '/' . $pid_for_filename . '.csv';
  if (file_exists($output_file_path)) {
    unlink($output_file_path);
  }

  $metadata_csv = islandora_get_csv_query_solr($pid);
  file_put_contents($output_file_path, $metadata_csv);
  // Remove the 'sites/default/files' since it's added by file_create_url().
  $relative_file_path = preg_replace("#$output_dir#", '', $output_file_path);
  $download_path = file_create_url(file_build_uri($relative_file_path));
  return l(t('here'), $download_path);
}

/**
 * Queries the Solr index to get our list.
 *
 * @param string $pid
 *   The collection's PID.
 *
 * @return array
 *   An array containing all of the PIDs matching $query
 *   or FALSE if there was a problem.
 */
function islandora_get_csv_query_solr($pid) {
  $field_type_filter = variable_get('islandora_get_csv_field_suffix_list', '_s|_ms');
  $field_type_filter = preg_replace('/,/', '|', $field_type_filter);
  // We don't use IslandoraSolrQueryProcessor for CSV results since
  // it doesn't seem possible to override the 'wt' parameter.
  $solr_endpoint = variable_get('islandora_solr_url', 'localhost:8080/solr');
  $solr_request = 'http://' . $solr_endpoint . "/select?q=*:*&wt=csv&rows=0&fl=mods_*";
  $field_list = @file_get_contents($solr_request);
  $field_array = explode(',', $field_list);
  $field_array_filtered = array();
  foreach ($field_array as $fieldname) {
    if (preg_match('/(' . $field_type_filter . ')$/', $fieldname)) {
      $field_array_filtered[] = $fieldname;
    }
  }
  // Filter out unwanted fields.
  $unwanted_fields_string = variable_get('islandora_get_csv_omit_fields', 'mods_subject_descendants_all_ms');
  $unwanted_fields_array = explode(',', $unwanted_fields_string);
  $field_array_filtered = array_diff($field_array_filtered, $unwanted_fields_array);

  // Perform a query on every MODS-sourced field in our Solr index using a
  // wildcard and collection-based query filter to see if there are any
  // results. If there are results, the field is used in the collection;
  // if there aren't any results, the field is not used in the collection.
  $additional_fields = variable_get('islandora_get_csv_additional_fields', 'PID');
  $fields_used_in_collection = explode(',', $additional_fields);
  foreach ($field_array_filtered as $filtered_field_name) {
    $query_processor = new IslandoraSolrQueryProcessor();
    $collection_pid = preg_replace('/:/', '/\:/', $pid);
    $query_processor->solrParams['fq'] = 'RELS_EXT_isMemberOfCollection_uri_t:"info:fedora/' . $collection_pid . '"';
    $query_processor->solrLimit = '0';
    $query = $filtered_field_name . ':*';  
    $query_processor->solrQuery = $query;
    $query_processor->executeQuery(FALSE);
    if ($query_processor->islandoraSolrResult['response']['numFound'] > 0) {
      $fields_used_in_collection[] = $filtered_field_name;  
    } 
  }
  $collection_fields_param = implode(',', $fields_used_in_collection);
 
  $collection_filter = 'RELS_EXT_isMemberOfCollection_uri_t:info\:fedora/' . $collection_pid;
  $solr_request = 'http://' . $solr_endpoint . '/select?q=PID:*&wt=csv&rows=1000000&fq=' . $collection_filter . '&fl=' . $collection_fields_param;
  $metadata_csv = @file_get_contents($solr_request);

  if (strlen($metadata_csv)) {
    return $metadata_csv;
  }
  else {
    return FALSE;
  }
}
